#!/bin/bash

export PATH=/var/vcap/packages/ruby/bin:$PATH
RUN_DIR=/var/vcap/sys/run/varnish
LOG_DIR=/var/vcap/sys/log/varnish
PIDFILE=$RUN_DIR/varnish.pid
JOB_DIR=/var/vcap/jobs/varnish

source /var/vcap/packages/common/utils.sh

case $1 in

  start)
    pid_guard $PIDFILE "VARNISH"

    mkdir -p $RUN_DIR
    mkdir -p $LOG_DIR

    echo $$ > $PIDFILE

    # FIXME: Crap installation of Varnish.
    # To be fixed once we begin using our blobstore
    PKG_OK=$(dpkg-query -W --showformat='${Status}\n' varnish | grep "install ok installed")
    if [ "$PKG_OK" == "" ]; then
      (cd /tmp && curl -O http://repo.varnish-cache.org/ubuntu/pool/varnish-3.0/v/varnish/libvarnishapi1_3.0.3-1~lucid_amd64.deb)
      (cd /tmp && curl -O http://repo.varnish-cache.org/ubuntu/pool/varnish-3.0/v/varnish/varnish_3.0.3-1~lucid_amd64.deb)
      dpkg -i /tmp/libvarnishapi1_3.0.3-1~lucid_amd64.deb
      dpkg -i /tmp/varnish_3.0.3-1~lucid_amd64.deb

      sed -i 's/START=yes/START=no/' /etc/default/varnish
      service varnish stop
    fi
    

    # ephemeral port range
    echo "1024 65535" > /proc/sys/net/ipv4/ip_local_port_range

    # TCP_FIN_TIMEOUT
    # This setting determines the time that must elapse before TCP/IP can release a closed connection and reuse
    # its resources. During this TIME_WAIT state, reopening the connection to the client costs less than establishing
    # a new connection. By reducing the value of this entry, TCP/IP can release closed connections faster, making more
    # resources available for new connections. Addjust this in the presense of many connections sitting in the
    # TIME_WAIT state:

    echo 5 > /proc/sys/net/ipv4/tcp_fin_timeout

    # TCP_TW_RECYCLE
    # It enables fast recycling of TIME_WAIT sockets. The default value is 0 (disabled). The sysctl documentation
    # incorrectly states the default as enabled. It can be changed to 1 (enabled) in many cases. Known to cause some
    # issues with hoststated (load balancing and fail over) if enabled, should be used with caution.

    echo 1 > /proc/sys/net/ipv4/tcp_tw_recycle

    # TCP_TW_REUSE
    # This allows reusing sockets in TIME_WAIT state for new connections when it is safe from protocol viewpoint.
    # Default value is 0 (disabled). It is generally a safer alternative to tcp_tw_recycle

    echo 1 > /proc/sys/net/ipv4/tcp_tw_reuse


    # exec /var/vcap/packages/varnish/bin/varnish \
    #      -c /var/vcap/jobs/varnish/config/varnish.yml \
    #      >>$LOG_DIR/varnish.stdout.log \
    #      2>>$LOG_DIR/varnish.stderr.log

    exec /usr/sbin/varnishd -F -a :80 \
        -T localhost:6082 -f /var/vcap/jobs/varnish/config/varnish.vcl \
        -S /var/vcap/jobs/varnish/config/secret -s malloc,<%= properties.varnish.memory %>M \
        >>$LOG_DIR/varnish.stdout.log \
        2>>$LOG_DIR/varnish.stderr.log

    ;;

  stop)
    kill_and_wait $PIDFILE

    ;;

  *)
    echo "Usage: varnish_ctl {start|stop}"

    ;;

esac
